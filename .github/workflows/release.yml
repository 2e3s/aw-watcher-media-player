name: Release
permissions:
  contents: write
on:
  push:
    tags:
      - 'v[0-9]*.*.*'
env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    # necessary for Windows
    shell: bash
  
jobs:
  build-ubuntu:
    # 22.04 is the earliest version with OpenSSL 3
    runs-on: ubuntu-22.04
    env:
      TARGET: x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies for Ubuntu
        run: sudo apt-get install -y curl build-essential libdbus-1-dev libssl-dev pkg-config

      - uses: Swatinem/rust-cache@v2
      - name: Install rust target
        run: rustup target add $TARGET
      - run: cargo build --release --target $TARGET

      - name: Compress binary
        run: zip "aw-watcher-media-player-linux.zip" aw-watcher-media-player
        working-directory: target/${{ env.TARGET }}/release

      - name: Add visualization
        run: zip -r "target/${{ env.TARGET }}/release/aw-watcher-media-player-linux.zip" visualization

      - name: Upload to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ env.TARGET }}/release/aw-watcher-media-player-linux.zip

      - run: cargo install cargo-deb
      - run: cargo deb
      - name: Upload deb to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: target/debian/aw-*.deb

  build-windows:
    runs-on: windows-latest
    env:
      TARGET: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v3

      - uses: Swatinem/rust-cache@v2
      - name: Install rust target
        run: rustup target add $TARGET
      - run: cargo build --release --target $TARGET

      - name: Install NSIS
        run: choco install nsis

      - name: Setup EnVar Plugin
        shell: powershell
        run: |
          $url = "https://github.com/GsNSIS/EnVar/releases/download/v0.3.1/EnVar-Plugin.zip"
          $output = "${{ runner.temp }}\EnVar_plugin.zip"
          $nsisDir = "C:\Program Files (x86)\NSIS"
          Invoke-WebRequest -Uri $url -OutFile $output
          Expand-Archive -Path $output -DestinationPath $nsisDir
          Get-ChildItem "C:\Program Files (x86)\NSIS\Plugins"

      - name: Create installer
        run: makensis windows.nsi

      - name: Upload installer to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: "*.exe"

      - name: Compress files
        shell: powershell
        run: Compress-Archive -Path aw-watcher-media-player.exe, ..\..\..\visualization -DestinationPath aw-watcher-media-player-windows.zip
        working-directory: target/${{ env.TARGET }}/release

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ env.TARGET }}/release/aw-watcher-media-player-windows.zip
