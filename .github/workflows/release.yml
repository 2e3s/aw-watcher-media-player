name: Release
permissions:
  contents: write
on:
  push:
    tags:
      - 'v[0-9]*.*.*'
env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    # necessary for Windows
    shell: bash
  
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            # 22.04 is the earliest version with OpenSSL 3
            image: ubuntu-22.04
            build_name: linux
          - target: x86_64-pc-windows-msvc
            image: windows-latest
            build_name: windows
    runs-on: ${{ matrix.image }}
    env:
      TARGET: ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies for Ubuntu
        if: ${{ contains(matrix.image, 'ubuntu') }}
        run: sudo apt-get install -y curl build-essential libdbus-1-dev libssl-dev pkg-config

      - uses: Swatinem/rust-cache@v2
      - name: Install rust target
        run: rustup target add $TARGET
      - run: cargo build --release --target $TARGET

      - name: Compress binary
        if: ${{ contains(matrix.image, 'windows') }}
        shell: powershell
        run: Compress-Archive aw-watcher-media-player.exe aw-watcher-media-player-${{ matrix.build_name }}.zip
        working-directory: target/${{ matrix.target }}/release

      - name: Compress binary
        if: ${{ !contains(matrix.image, 'windows') }}
        run: zip "aw-watcher-media-player-${{ matrix.build_name }}.zip" aw-watcher-media-player
        working-directory: target/${{ matrix.target }}/release

      - name: Upload to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/release/aw-watcher-media-player-${{ matrix.build_name }}.zip
